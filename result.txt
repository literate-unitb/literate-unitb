+- Unit-B Document
|  +- basic syntax and scopes
|  +- small machine example
|  |  +- test 0
|  |  +- test 1 (separate machine blocks)
|  |  +- test 2 (verification, one failure)
|  |  +- test 3 (verification)
|  |  +- test 4 (proof obligation, invariance)
|  |  +- test 5 (co, 'skip' proof obligation)
|  |  +- [ Success: 6 / 6 ]
|  +- table of cubes example
|  |  +- test 0 (syntax)
|  |  +- test 1 (verification)
|  |  +- test 2 (init/fis po)
|  |  +- proof of inv0
|  |  +- empty proof
|  |  +- [ Success: 5 / 5 ]
|  +- train station example
|  |  +- test 0, syntax
|  |  +- test 1, verification
|  |  +- test 2, proof obligation, INIT/fis
|  |  +- test 3, proof obligation, leave/fis
|  |  +- test 4, proof obligation, leave/sch
|  |  +- test 5, proof obligation, leave/en/tr0
|  |  +- test 7, undeclared symbol
|  |  +- test 8, undeclared event (wrt transient)
|  |  +- test 9, undeclared event (wrt c sched)
|  |  +- test 10, undeclared event (wrt indices)
|  |  +- test 11, undeclared event (wrt assignment)
|  |  +- test 12, proof obligation leave/INV/inv2
|  |  +- test 13, verification, name clash between dummy and index
|  |  +- test 14, verification, non-exhaustive case analysis
|  |  +- test 15, verification, incorrect new assumption
|  |  +- test 16, verification, proof by parts
|  |  +- test 17, ill-defined types
|  |  +- test 18, assertions have type bool
|  |  +- [ Success: 18 / 18 ]
|  +- lambda expressions in the cube example
|  |  +- test 0, verification, lambda vs empty-fun
|  |  +- test 1, verification, lambda vs ovl, mk-fun
|  |  +- [ Success: 2 / 2 ]
|  +- the parser is exception free
|  +- [ Success: 6 / 6 ]
+- Unit-B
|  +- 'x eventually increases' verifies
|  +- train, model 0, verification
|  +- train, m0 transient / falsification PO
|  +- genericity
|  |  +- unification, t0
|  |  +- unification, t1
|  |  +- unification, t2
|  |  +- unification, t3
|  |  +- unification, t4
|  |  +- unification, t5
|  |  +- unification, t6
|  |  +- type instantiation
|  |  +- type inference 1
|  |  +- type inference 3
|  |  +- type inference 4
|  |  +- type inference 5
|  |  +- instantiation of unified types is unique
+++ OK, passed 100 tests.
|  |  +- instantiation of unified types is unique (counter examples)
|  |  +- type mapping are acyclic
+++ OK, passed 100 tests.
|  |  +- [ Success: 15 / 15 ]
|  +- [ Success: 4 / 4 ]
+- latex parser
|  +- sample.tex
|  +- sorted seq err.tex
|  +- reconstitute sample.tex
|  +- reconstitute integers.tex
|  +- reconstitute sorted seq.tex
|  +- [ Success: 5 / 5 ]
+- Z3 test
|  +- sample_quant
|  +- sample_quant2
|  +- sample_quant3
|  +- sample proof
|  +- check sample calc
|  +- canonical lambdas
|  +- canonical lambdas with quantifier
|  +- [ Success: 7 / 7 ]
+- Formatting utilities
|  +- test 0
|  +- test 1
|  +- [ Success: 2 / 2 ]
+- [ Success: 5 / 5 ]

***************
*** SUCCESS ***
***************
Lines of Haskell code:
    5733   36633  322505
