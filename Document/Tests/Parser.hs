module Document.Tests.Parser where

import Document.Tests.Suite

import Tests.UnitTest

test_case :: TestCase
test_case = test_cases 
    "Parser" 
    [ POCase "test0: verify m0" case0 result0 
    , POCase "test1: verify m1" case1 result1 
    , POCase "test2: verify m2" case2 result2 ]

path0 :: FilePath
path0 = "Tests/parser/main.tex"

case0 :: IO POResult
case0 = verify path0 0

result0 :: String
result0 = unlines
    [ "  o  m0/INIT/FIS/in"
    , "  o  m0/INIT/FIS/v"
    , "  o  m0/INIT/INV/m0:inv0"
    , "  o  m0/INIT/INV/m0:inv1"
    , "  o  m0/INIT/WD"
    , "  o  m0/INIT/WWD"
    , "  o  m0/INV/WD"
    , "  o  m0/input/FIS/in@prime"
    , "  o  m0/input/FIS/v@prime"
    , "  o  m0/input/INV/m0:inv0"
    , "  o  m0/input/INV/m0:inv1"
    , "  o  m0/input/SAF/m0:saf0"
    , "  o  m0/input/WD/ACT/m0:act0"
    , "  o  m0/input/WD/ACT/m0:act1"
    , "  o  m0/input/WD/C_SCH"
    , "  o  m0/input/WD/F_SCH"
    , "  o  m0/input/WD/GRD"
    , "  o  m0/input/WWD"
    , "  o  m0/m0:saf0/SAF/WD/lhs"
    , "  o  m0/m0:saf0/SAF/WD/rhs"
    , "passed 20 / 20"
    ]

case1 :: IO POResult
case1 = verify path0 1

result1 :: String
result1 = unlines
    [ "  o  m1/INIT/FIS/c"
    , "  o  m1/INIT/FIS/err"
    , "  o  m1/INIT/FIS/in"
    , "  o  m1/INIT/FIS/nx"
    , "  o  m1/INIT/FIS/v"
    , "  o  m1/INIT/INV/m1:inv0"
    , "  o  m1/INIT/INV/m1:inv1"
    , "  o  m1/INIT/INV/m1:inv2"
    , "  o  m1/INIT/INV/m1:inv3"
    , "  o  m1/INIT/WD"
    , "  o  m1/INIT/WWD"
    , "  o  m1/INV/WD"
    , "  o  m1/choose/FIS/ast@prime"
    , "  o  m1/choose/FIS/c@prime"
    , "  o  m1/choose/FIS/err@prime"
    , "  o  m1/choose/FIS/in@prime"
    , "  o  m1/choose/FIS/nx@prime"
    , "  o  m1/choose/FIS/v@prime"
    , "  o  m1/choose/INV/m1:inv0"
    , "  o  m1/choose/INV/m1:inv1"
    , "  o  m1/choose/INV/m1:inv2"
    , "  o  m1/choose/INV/m1:inv3"
    , "  o  m1/choose/SCH"
    , "  o  m1/choose/SCH/vv"
    , "  o  m1/choose/WD/ACT/m1:act0"
    , "  o  m1/choose/WD/C_SCH"
    , "  o  m1/choose/WD/F_SCH"
    , "  o  m1/choose/WD/GRD"
    , "  o  m1/choose/WWD"
    , "  o  m1/fail/FIS/ast@prime"
    , "  o  m1/fail/FIS/c@prime"
    , "  o  m1/fail/FIS/err@prime"
    , "  o  m1/fail/FIS/in@prime"
    , "  o  m1/fail/FIS/nx@prime"
    , "  o  m1/fail/FIS/v@prime"
    , "  o  m1/fail/INV/m1:inv0"
    , "  o  m1/fail/INV/m1:inv1"
    , "  o  m1/fail/INV/m1:inv2"
    , "  o  m1/fail/INV/m1:inv3"
    , "  o  m1/fail/SCH/m1:grd0"
    , "  o  m1/fail/SCH/m1:grd1"
    , "  o  m1/fail/WD/ACT/m1:act0"
    , "  o  m1/fail/WD/ACT/m1:act1"
    , "  o  m1/fail/WD/C_SCH"
    , "  o  m1/fail/WD/F_SCH"
    , "  o  m1/fail/WD/GRD"
    , "  o  m1/fail/WWD"
    , "  o  m1/input/FIS/ast@prime"
    , "  o  m1/input/FIS/c@prime"
    , "  o  m1/input/FIS/err@prime"
    , "  o  m1/input/FIS/in@prime"
    , "  o  m1/input/FIS/nx@prime"
    , "  o  m1/input/FIS/v@prime"
    , "  o  m1/input/INV/m1:inv0"
    , "  o  m1/input/INV/m1:inv1"
    , "  o  m1/input/INV/m1:inv2"
    , "  o  m1/input/INV/m1:inv3"
    , "  o  m1/input/WD/C_SCH"
    , "  o  m1/input/WD/F_SCH"
    , "  o  m1/input/WD/GRD"
    , "  o  m1/input/WWD"
    , "  o  m1/m1:prog0/PROG/WD/lhs"
    , "  o  m1/m1:prog0/PROG/WD/rhs"
    , "  o  m1/m1:prog0/REF/trading/lhs"
    , "  o  m1/m1:prog0/REF/trading/rhs"
    , "  o  m1/m1:prog1/PROG/WD/lhs"
    , "  o  m1/m1:prog1/PROG/WD/rhs"
    , "  o  m1/m1:prog1/REF/transitivity/lhs"
    , "  o  m1/m1:prog1/REF/transitivity/mhs/m1:prog2/m1:prog3"
    , "  o  m1/m1:prog1/REF/transitivity/rhs"
    , "  o  m1/m1:prog2/PROG/WD/lhs"
    , "  o  m1/m1:prog2/PROG/WD/rhs"
    , "  o  m1/m1:prog2/REF/ensure/m1/SAF/WD/lhs"
    , "  o  m1/m1:prog2/REF/ensure/m1/SAF/WD/rhs"
    , "  o  m1/m1:prog2/REF/ensure/m1/TR/WD"
    , "  o  m1/m1:prog2/REF/ensure/m1/TR/choose/EN"
    , "  o  m1/m1:prog2/REF/ensure/m1/TR/choose/NEG"
    , "  o  m1/m1:prog2/REF/ensure/m1/choose/SAF"
    , "  o  m1/m1:prog2/REF/ensure/m1/fail/SAF"
    , "  o  m1/m1:prog2/REF/ensure/m1/input/SAF"
    , "  o  m1/m1:prog2/REF/ensure/m1/parse/SAF"
    , "  o  m1/m1:prog3/PROG/WD/lhs"
    , "  o  m1/m1:prog3/PROG/WD/rhs"
    , "  o  m1/m1:prog3/REF/disjunction/lhs"
    , "  o  m1/m1:prog3/REF/disjunction/rhs"
    , "  o  m1/m1:prog4/PROG/WD/lhs"
    , "  o  m1/m1:prog4/PROG/WD/rhs"
    , "  o  m1/m1:prog4/REF/ensure/m1/SAF/WD/lhs"
    , "  o  m1/m1:prog4/REF/ensure/m1/SAF/WD/rhs"
    , "  o  m1/m1:prog4/REF/ensure/m1/TR/WD"
    , "  o  m1/m1:prog4/REF/ensure/m1/TR/parse/EN"
    , "  o  m1/m1:prog4/REF/ensure/m1/TR/parse/NEG"
    , "  o  m1/m1:prog4/REF/ensure/m1/choose/SAF"
    , "  o  m1/m1:prog4/REF/ensure/m1/fail/SAF"
    , "  o  m1/m1:prog4/REF/ensure/m1/input/SAF"
    , "  o  m1/m1:prog4/REF/ensure/m1/parse/SAF"
    , "  o  m1/m1:prog5/PROG/WD/lhs"
    , "  o  m1/m1:prog5/PROG/WD/rhs"
    , "  o  m1/m1:prog5/REF/ensure/m1/SAF/WD/lhs"
    , "  o  m1/m1:prog5/REF/ensure/m1/SAF/WD/rhs"
    , "  o  m1/m1:prog5/REF/ensure/m1/TR/WD"
    , "  o  m1/m1:prog5/REF/ensure/m1/TR/fail/EN"
    , "  o  m1/m1:prog5/REF/ensure/m1/TR/fail/NEG"
    , "  o  m1/m1:prog5/REF/ensure/m1/choose/SAF"
    , "  o  m1/m1:prog5/REF/ensure/m1/fail/SAF"
    , "  o  m1/m1:prog5/REF/ensure/m1/input/SAF"
    , "  o  m1/m1:prog5/REF/ensure/m1/parse/SAF"
    , "  o  m1/parse/FIS/ast@prime"
    , "  o  m1/parse/FIS/c@prime"
    , "  o  m1/parse/FIS/err@prime"
    , "  o  m1/parse/FIS/in@prime"
    , "  o  m1/parse/FIS/nx@prime"
    , "  o  m1/parse/FIS/v@prime"
    , "  o  m1/parse/INV/m1:inv0"
    , "  o  m1/parse/INV/m1:inv1"
    , "  o  m1/parse/INV/m1:inv2"
    , "  o  m1/parse/INV/m1:inv3"
    , "  o  m1/parse/SCH/m1:grd0"
    , "  o  m1/parse/SCH/m1:grd1"
    , "  o  m1/parse/WD/ACT/m1:act0"
    , "  o  m1/parse/WD/ACT/m1:act1"
    , "  o  m1/parse/WD/ACT/m1:act2"
    , "  o  m1/parse/WD/C_SCH"
    , "  o  m1/parse/WD/F_SCH"
    , "  o  m1/parse/WD/GRD"
    , "  o  m1/parse/WWD"
    , "passed 126 / 126"
    ]

case2 :: IO POResult
case2 = verify path0 2

result2 :: String
result2 = unlines
    [ "  o  m2/INIT/FIS/c"
    , "  o  m2/INIT/FIS/err"
    , "  o  m2/INIT/FIS/in"
    , "  o  m2/INIT/FIS/nx"
    , "  o  m2/INIT/FIS/v"
    , "  o  m2/INIT/WD"
    , "  o  m2/INIT/WWD"
    , "  o  m2/INV/WD"
    , "  o  m2/choose/FIS/ast@prime"
    , "  o  m2/choose/FIS/c@prime"
    , "  o  m2/choose/FIS/err@prime"
    , "  o  m2/choose/FIS/in@prime"
    , "  o  m2/choose/FIS/nx@prime"
    , "  o  m2/choose/FIS/v@prime"
    , "  o  m2/choose/WD/C_SCH"
    , "  o  m2/choose/WD/F_SCH"
    , "  o  m2/choose/WD/GRD"
    , "  o  m2/choose/WWD"
    , "  o  m2/fail/FIS/ast@prime"
    , "  o  m2/fail/FIS/c@prime"
    , "  o  m2/fail/FIS/err@prime"
    , "  o  m2/fail/FIS/in@prime"
    , "  o  m2/fail/FIS/nx@prime"
    , "  o  m2/fail/FIS/v@prime"
    , "  o  m2/fail/WD/C_SCH"
    , "  o  m2/fail/WD/F_SCH"
    , "  o  m2/fail/WD/GRD"
    , "  o  m2/fail/WWD"
    , "  o  m2/input/FIS/ast@prime"
    , "  o  m2/input/FIS/c@prime"
    , "  o  m2/input/FIS/err@prime"
    , "  o  m2/input/FIS/in@prime"
    , "  o  m2/input/FIS/nx@prime"
    , "  o  m2/input/FIS/v@prime"
    , "  o  m2/input/WD/C_SCH"
    , "  o  m2/input/WD/F_SCH"
    , "  o  m2/input/WD/GRD"
    , "  o  m2/input/WWD"
    , "  o  m2/parse/FIS/ast@prime"
    , "  o  m2/parse/FIS/c@prime"
    , "  o  m2/parse/FIS/err@prime"
    , "  o  m2/parse/FIS/in@prime"
    , "  o  m2/parse/FIS/nx@prime"
    , "  o  m2/parse/FIS/v@prime"
    , "  o  m2/parse/WD/C_SCH"
    , "  o  m2/parse/WD/F_SCH"
    , "  o  m2/parse/WD/GRD"
    , "  o  m2/parse/WWD"
    , "passed 48 / 48"
    ]
